// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ProximiioProcessor
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Combine
import CoreLocation
import CoreMotion
import Foundation
import MessageUI
import Proximiio
import Swift
import SwiftyJSON
import UIKit
import _Concurrency
import _StringProcessing
extension ProximiioSimulationProcessor {
  public enum Action {
    case poorAccuracy
    case coverage(gps: Bool)
  }
}
@objc @_inheritsConvenienceInitializers public class ProximiioSimulationProcessor : NSObject, ProximiioLocationProcessor {
  public var action: Combine.PassthroughSubject<ProximiioProcessor.ProximiioSimulationProcessor.Action, Swift.Never>
  public var currentWindow: UIWindow?
  public var hiThreshold: Swift.Double
  public var lowThreshold: Swift.Double
  public var supportFreeride: Swift.Bool
  public var refreshThreshold: Swift.Double
  public var closestBeaconThreshold: Swift.Double
  public var forcePositionToLevelChanger: Swift.Bool
  public var averageStepLength: Swift.Double
  public var log: ProximiioLogProcessor?
  @objc public func process(_ currentPosition: ProximiioLocation!, floor currentFloor: ProximiioFloor!, hasLevelChanger levelChanger: Bool, transitional: ProximiioInput!) -> ProximiioLocation!
  public func set(routes: [[CLLocationFloor]])
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ProximiioLogProcessor : NSObject, ProximiioLocationProcessor {
  public var currentWindow: UIWindow?
  @objc public func process(_ currentPosition: ProximiioLocation!, floor currentFloor: ProximiioFloor!, hasLevelChanger levelChanger: Bool, transitional: ProximiioInput!) -> ProximiioLocation!
  @objc override dynamic public init()
  @objc deinit
}
extension ProximiioLogProcessor : MFMailComposeViewControllerDelegate {
  public func write(_ string: String)
  public func sendMail()
  @objc dynamic public func mailComposeController(_ didFinishWithcontroller: MFMailComposeViewController, didFinishWith result: MFMailComposeResult, error: Error?)
}
@objc @_inheritsConvenienceInitializers public class ProximiioSnapProcessor : NSObject, ProximiioLocationProcessor {
  @objc public var threshold: Swift.Double
  @objc public var forceFixThreshold: Swift.Double
  @objc public var forceFixAfterSeconds: Swift.Double
  @objc public func process(_ currentPosition: ProximiioLocation!, floor currentFloor: ProximiioFloor!, hasLevelChanger levelChanger: Bool, transitional trancsitional: ProximiioInput!) -> ProximiioLocation!
  @objc override dynamic public init()
  @objc deinit
}
extension ProximiioSnapProcessor {
  public func navigationRouteSet(_ route: [[CLLocation]])
  public func navigationRouteDrop()
}
extension ProximiioSnapProcessor {
  public func distance(_ from: CLLocationCoordinate2D?, to: CLLocationCoordinate2D?) -> Double
}
public class CLLocationFloor {
  public init(location: CLLocation, floor: Int)
  @objc deinit
}
extension CLLocationCoordinate2D : Equatable {
}
public func == (lhs: CLLocationCoordinate2D, rhs: CLLocationCoordinate2D) -> Bool
public protocol ProximiioPDRProcessorProtocol : AnyObject {
  func `is`(moving: Bool)
}
@objc @_inheritsConvenienceInitializers public class ProximiioPDRProcessor : NSObject, ProximiioLocationProcessor {
  weak public var delegate: ProximiioPDRProcessorProtocol?
  @objc public var hiThreshold: Swift.Double
  @objc public var lowThreshold: Swift.Double
  @objc public var threshold: Swift.Double
  @objc public var avgStepLength: Swift.Double
  @objc public var pdrTimeout: Swift.Double
  @objc public var useDeviceHeading: Swift.Bool
  @objc public var customHeading: Swift.Double
  @objc public func process(_ currentPosition: ProximiioLocation!, floor currentFloor: ProximiioFloor!, hasLevelChanger levelChanger: Bool, transitional: ProximiioInput!) -> ProximiioLocation!
  @objc override dynamic public init()
  @objc deinit
}
